apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.components.multidex"
        minSdkVersion 20
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            multiDexKeepFile file("main-dex")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            multiDexKeepFile file("main-dex")
        }
    }

}
//afterEvaluate {
//    tasks.matching {
//        it.name.startsWith('dex')
//    }.each { dx ->
//        def listFile = project.rootDir.absolutePath+'/main-dex.txt'
//        if (dx.additionalParameters == null) {
//            dx.additionalParameters = []
//        }
//        //表示当方法数越界时则生成多个dex文件（我的没有越界，貌似也生成了两个）
//        dx.additionalParameters += '--multi-dex'
//        //这个指定了listFile中的类（即maindexlist.txt中的类）会打包到主dex中，不过注意下一条。
//        dx.additionalParameters += '--main-dex-list=' +listFile
//        //表明只有-main-dex-list所指定的类（在我的配置中，就是app目录下的maindexlist.txt中包含的类）才能打包到主dex中，如果没有这个选项，上个选项就会失效
//        dx.additionalParameters += '--minimal-main-dex'
//    }
//}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation "com.squareup.okhttp3:okhttp:4.3.1"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.android.support:multidex:1.0.0'

}
